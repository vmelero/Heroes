{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { catchError, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HeroesService = /*#__PURE__*/(() => {\n  class HeroesService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.baseUrl;\n    }\n    getHeroes() {\n      return this.http.get(`${this.baseUrl}/heroes`);\n    }\n    getHeroeByID(id) {\n      return this.http.get(`${this.baseUrl}/heroes/${id}`).pipe(catchError(error => of(undefined)) // si aparece un error porque devuelve undefined devuelve un observable undefined.\n      );\n    }\n\n    getSuggestions(query) {\n      return this.http.get(`${this.baseUrl}/heroes?q=${query}&_limit=6`);\n    }\n    addHero(hero) {\n      return this.http.post(`${this.baseUrl}/heroes`, hero);\n    }\n    updateHero(hero) {\n      if (!hero.id) throw Error('Hero id is required');\n      return this.http.patch(`${this.baseUrl}/heroes/${hero.id}`, hero);\n    }\n    deleteHero(hero) {\n      return this.http.delete(`${this.baseUrl}/heroes/${hero.id}`);\n    }\n  }\n  HeroesService.ɵfac = function HeroesService_Factory(t) {\n    return new (t || HeroesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  HeroesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HeroesService,\n    factory: HeroesService.ɵfac,\n    providedIn: 'root'\n  });\n  return HeroesService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}